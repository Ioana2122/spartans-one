{"version":3,"sources":["components/Header.jsx","components/Athlete.jsx","components/AddAthleteModal.jsx","components/MessageModal.jsx","components/Main.jsx","components/Footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","variant","expand","Brand","href","alt","src","width","height","className","Toggle","aria-controls","Collapse","id","Nav","Link","Component","athletesAPI","buttonText","Athlete","deleteAthlete","event","athleteID","target","console","log","fetch","method","then","res","json","answer","props","displayMessage","setTimeout","error","getAthletes","updateRecords","e","info","_id","elements","document","getElementById","getElementsByClassName","innerText","Object","keys","map","key","disabled","newScore","name","parseInt","value","URI","headers","Headers","append","body","JSON","stringify","personalBest","response","this","age","sex","email","photo","Card","Accordion","as","eventKey","style","fontSize","Body","Img","Image","maxHeight","objectFit","Title","Text","display","ListGroup","padding","index","Item","Form","Row","Col","Label","textTransform","Control","type","defaultValue","ButtonGroup","size","aria-label","Button","onClick","AddAthleteModal","onChangeFileHandler","setState","selectedFile","files","loaded","handleSubmit","preventDefault","form","currentTarget","isValid","checkValidity","isValidated","stopPropagation","formPersonalBest","personalScore","i","length","formData","FormData","formName","formEmail","formAge","formGender","state","onHide","Modal","aria-labelledby","centered","closeButton","noValidate","onSubmit","Group","controlId","column","sm","required","placeholder","Feedback","Check","label","lg","onChange","span","offset","MessageModal","show","message","Main","modalShow","messageShow","showModal","bind","hideModal","newState","athletes","athlete","paddingBottom","borderRadius","position","bottom","right","footerStyle","left","background","color","Footer","App","data","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.995df4ff.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\n\nexport default class Header extends Component {\n  render(){\n    return(\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Navbar.Brand href=\"#home\">\n                <img\n                    alt=\"\"\n                    src=\"/logo.svg\"\n                    width=\"30\"\n                    height=\"30\"\n                    className=\"d-inline-block align-top\"\n                />{' '}| Spartans\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\n                    <Nav.Link href=\"#link\">Link</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n  }\n}","import React, { Component, Fragment } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Image from \"react-bootstrap/Image\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst athletesAPI = \"https://theboxathletes.herokuapp.com/athletes/\";\n\nconst buttonText = [\"Edit Records\", \"Update Records\"];\n\nexport default class Athlete extends Component {\n  deleteAthlete = event => {\n    const athleteID = event.target.id;\n    console.log(athleteID);\n    fetch(athletesAPI + athleteID, {\n      method: \"DELETE\"\n    })\n      .then(res => res.json())\n      .then(\n        answer => {\n          console.log(\"Answer is: \" + answer);\n          // display a popup with the response from server\n          this.props.displayMessage(answer);\n          // hide it after 1.5 seconds\n          setTimeout(this.props.displayMessage, 1500);\n        },\n        error => console.log(error)\n      )\n      .then(this.props.getAthletes); // re-fetch from API\n  };\n\n  updateRecords = e => {\n    const athleteID = this.props.info._id;\n    // first, target the scores for current id, and select all scores\n    const elements = document\n      .getElementById(\"scores-\" + athleteID)\n      .getElementsByClassName(\"scores-best form-control\");\n    if (e.target.innerText === buttonText[0]) {\n      // remove 'disabled' attribute\n      Object.keys(elements).map(key => (elements[key].disabled = false));\n\n      // change button text:\n      e.target.innerText = buttonText[1];\n    } else {\n      // initialize a new object\n      const newScore = {};\n      // add new scores to the newScore object\n      Object.keys(elements).map(\n        key =>\n          (newScore[elements[key].name] = parseInt(elements[key].value) || 0)\n        // remove 0 from numbers starting with 0 (ex: 0123) and if nothing entered, puts 0\n      );\n\n      const URI = athletesAPI + athleteID;\n\n      const headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      // ABSOLUTELY necessary to specify Content-Type!\n\n      fetch(URI, {\n        method: \"PUT\",\n        headers: headers,\n        body: JSON.stringify({ personalBest: newScore })\n      })\n        .then(response => {\n          console.log(response.json());\n        })\n        .then(\n          answer => {\n            console.log(\"Answer is: \" + answer);\n          },\n          error => console.log(error)\n        )\n\n        .then(this.props.getAthletes)\n        .then(this.props.displayMessage(\"Athlete modified\")) // display message\n        .then(setTimeout(this.props.displayMessage, 1000)); // hide it afte one second\n\n      // disable input fields\n      Object.keys(elements).map(key => (elements[key].disabled = true));\n      // change button text back to \"Edit Records\"\n      e.target.innerText = buttonText[0];\n    }\n  };\n\n  render() {\n    const { name, age, sex, email, photo, _id, personalBest } = this.props.info;\n\n    return (\n      <Fragment>\n        <Card key={_id} className=\"rounded-0\">\n          <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={_id}>\n            <span style={{ fontSize: \"1.5rem\" }}>{name}</span>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey={_id}>\n            <Card.Body>\n              <Card.Img\n                as={Image}\n                src={photo}\n                style={{ maxHeight: 300, objectFit: \"contain\" }}\n              />\n\n              <Card.Title as={\"h3\"}>{name}</Card.Title>\n\n              <Card.Text>\n                <small className=\"text-muted\">{email}</small>\n                <span style={{ display: \"block\" }}>\n                  {\" \"}\n                  Age: {age} | Sex: {sex}\n                </span>\n              </Card.Text>\n              <ListGroup\n                variant=\"flush\"\n                style={{ padding: \"1rem 0\" }}\n                id={\"scores-\" + _id}\n              >\n                {Object.keys(personalBest).map((key, index) => (\n                  <ListGroup.Item as={Form} key={index}>\n                    <Row>\n                      <Col>\n                        <Form.Label>\n                          <span style={{ textTransform: \"capitalize\" }}>\n                            {key}\n                          </span>\n                        </Form.Label>\n                      </Col>\n                      <Col>\n                        <Form.Control\n                          disabled={true}\n                          type=\"number\"\n                          className=\"scores-best\"\n                          name={key}\n                          defaultValue={personalBest[key]}\n                        />\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n\n              <ButtonGroup size=\"sm\" aria-label=\"Action Buttons\">\n                <Button variant=\"success\" onClick={this.updateRecords}>\n                  {buttonText[0]}\n                </Button>\n                <Button variant=\"warning\">Edit Athlete</Button>\n                <Button variant=\"danger\" onClick={this.deleteAthlete} id={_id}>\n                  Detele Athlete\n                </Button>\n              </ButtonGroup>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst athletesAPI = \"https://theboxathletes.herokuapp.com/athletes/\";\n\nexport default class AddAthleteModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isValidated: false,\n      selectedFile: null\n    };\n  }\n\n  onChangeFileHandler = event => {\n    this.setState({\n      selectedFile: event.target.files[0],\n      loaded: 0\n    });\n    console.log(event.target.files[0]);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const isValid = form.checkValidity();\n    console.log(isValid);\n\n    this.setState({\n      isValidated: isValid\n    });\n\n    if (isValid === false) {\n      event.stopPropagation();\n    } else {\n      console.log(\"Form validated and submitted\");\n\n      const personalBest = form.formPersonalBest;\n      const personalScore = {};\n      for (let i = 0; i < personalBest.length; i++) {\n        personalScore[personalBest[i].name] =\n          parseInt(personalBest[i].value) || 0;\n      }\n\n      console.log(personalScore);\n\n      const formData = new FormData();\n      formData.append(\"name\", form.formName.value);\n      formData.append(\"email\", form.formEmail.value);\n      formData.append(\"age\", form.formAge.value);\n      formData.append(\"sex\", form.formGender.value);\n      formData.append(\"personalBest\", JSON.stringify(personalScore));\n      formData.append(\"photo\", this.state.selectedFile);\n\n      fetch(athletesAPI, {\n        method: \"POST\",\n        body: formData\n      })\n        .then(\n          response => {\n            console.log(response.json());\n          },\n          error => {\n            console.log(error);\n          }\n        )\n        .then(this.props.onHide); // this will close the modal\n    }\n  };\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add new Athlete\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* FORM STARTS HERE */}\n          <Form\n            noValidate\n            // validated={this.state.isValidated}\n            onSubmit={this.handleSubmit}\n          >\n            {/* NAME */}\n            <Form.Group as={Row} controlId=\"formName\">\n              <Form.Label column sm={2}>\n                Name\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Control\n                  required\n                  type=\"text\"\n                  placeholder=\"Athlete's name\"\n                />\n              </Col>\n            </Form.Group>\n            {/* EMAIL ADDRESS */}\n            <Form.Group as={Row} controlId=\"formEmail\">\n              <Form.Label column sm={2}>\n                Email\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Control required type=\"email\" placeholder=\"Enter email\" />\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a valid email.\n                </Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n            {/* AGE SELECTION */}\n            <Form.Group as={Row} controlId=\"formAge\">\n              <Form.Label column sm={2}>\n                Age\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Control required type=\"number\" placeholder=\"Enter age\" />\n              </Col>\n            </Form.Group>\n            {/* GENDER SELECTION */}\n            <fieldset>\n              <Form.Group as={Row} controlId=\"formGender\">\n                <Form.Label as=\"legend\" column sm={2}>\n                  Sex\n                </Form.Label>\n                <Col sm={10}>\n                  <Form.Check type=\"radio\" label=\"M\" value=\"M\" name=\"gender\" />\n                  <Form.Check type=\"radio\" label=\"F\" value=\"F\" name=\"gender\" />\n                </Col>\n              </Form.Group>\n            </fieldset>\n            {/* PERSONAL BEST SCORE */}\n            <Form.Group as={Row} controlId=\"formPersonalBest\">\n              <Form.Label column lg={12}>\n                Personal Best\n              </Form.Label>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Benchpress\"\n                  name=\"benchpress\"\n                />\n              </Col>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Strictpress\"\n                  name=\"strictpress\"\n                />\n              </Col>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Pushpress\"\n                  name=\"pushpress\"\n                />\n              </Col>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Row\"\n                  name=\"row\"\n                />\n              </Col>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Backsquat\"\n                  name=\"backsquat\"\n                />\n              </Col>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Frontsquat\"\n                  name=\"frontsquat\"\n                />\n              </Col>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Deadlift\"\n                  name=\"deadlift\"\n                />\n              </Col>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Trapbardeadlift\"\n                  name=\"trapbardeadlift\"\n                />\n              </Col>\n            </Form.Group>\n            {/* PHOTO UPLOAD */}\n            <Form.Group as={Row} controlId=\"formPhoto\">\n              <Form.Label column sm={2}>\n                Photo\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Control type=\"file\" onChange={this.onChangeFileHandler} />\n              </Col>\n            </Form.Group>\n            {/* SUBMIT BUTTON */}\n            <Form.Group as={Row}>\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button variant=\"success\" type=\"submit\">\n                  Submit\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n          {/* FORM ENDED RIGHT ABOVE */}\n        </Modal.Body>\n        {/* OPTIONAL FOOTER - UNCOMMENT BELOW TO DISPLAY */}\n        {/* <Modal.Footer>\n                <Button variant=\"danger\" size=\"sm\" onClick={this.onHide}>Cancel</Button>\n            </Modal.Footer> */}\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport default class MessageModal extends Component {\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.onHide}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.message}</Modal.Title>\n        </Modal.Header>\n      </Modal>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport Athlete from \"./Athlete.jsx\";\nimport AddAthleteModal from \"./AddAthleteModal.jsx\";\nimport MessageModal from \"./MessageModal.jsx\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default class Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      modalShow: false,\n      messageShow: false,\n      message: \"\"\n    };\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.displayMessage = this.displayMessage.bind(this);\n  }\n\n  showModal() {\n    this.setState({\n      modalShow: true\n    });\n  }\n\n  hideModal() {\n    this.setState({\n      modalShow: false\n    });\n    this.props.getAthletes();\n    this.displayMessage(\"Modal AddAthlete inchis\"); // NEEDS IMPLEMENTATION OF CUSTOM MESSAGE\n    setTimeout(this.displayMessage, 1500);\n  }\n\n  displayMessage(message) {\n    const newState = !this.state.messageShow;\n    this.setState({\n      messageShow: newState,\n      message: message\n    });\n  }\n\n  render() {\n    const alwaysVisible = {\n      width: \"3rem\",\n      height: \"3rem\",\n      fontSize: \"1.25em\",\n      borderRadius: \"50%\",\n      position: \"fixed\",\n      bottom: 100,\n      right: 50\n    };\n\n    return (\n      <Fragment>\n        {/* TEXT DISPLAYED WHILE FETCH IS RUNNING */}\n        {this.props.athletes.length === 0 && <h3>Loading athletes...</h3>}\n        {/* DISPLAYNG ATHLETES */}\n        <Accordion>\n          {this.props.athletes.map(athlete => (\n            <Athlete\n              info={athlete}\n              key={athlete._id}\n              getAthletes={this.props.getAthletes}\n              displayMessage={this.displayMessage}\n            />\n          ))}\n        </Accordion>\n        <div style={{ paddingBottom: \"3.5rem\" }}></div>\n        {/* BUTTON ALWAYS VISIBLE FOR ADDING NEW ATHLETE */}\n        <Button style={alwaysVisible} onClick={this.showModal}>\n          +\n        </Button>\n        {/* MODAL ADD ATHLETE */}\n        <AddAthleteModal\n          show={this.state.modalShow}\n          onHide={this.hideModal}\n          message={this.state.message}\n        />\n        {/* MODAL TO DISPLAY MESSAGES */}\n        <MessageModal\n          show={this.state.messageShow}\n          onHide={this.displayMessage}\n          message={this.state.message}\n        />\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nconst footerStyle = {\n    position : 'fixed',\n    left : 0,\n    bottom : 0,\n    width : '100%',\n    background : '#343a40',\n    color : '#fff',\n    height : '3.5rem',\n    fontSize : '1.25rem',\n    padding : '.75rem 3.175rem'\n}\n\nexport default class Footer extends Component {\n  render(){\n    return(\n      <footer style={footerStyle}>\n          | Footer\n      </footer>\n    )\n  }\n}","import React, { Component, Fragment } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Header.jsx\";\nimport Main from \"./components/Main.jsx\";\nimport Footer from \"./components/Footer.jsx\";\n\nconst athletesAPI = \"https://theboxathletes.herokuapp.com/athletes/\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = { athletes: [] };\n  }\n\n  componentDidMount() {\n    this.getAthletes();\n  }\n\n  getAthletes = () => {\n    fetch(athletesAPI)\n      .then(response => response.json())\n      .then(\n        data => {\n          this.setState({ athletes: data });\n          console.log(this.state.athletes);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        error => {\n          console.log(error);\n        }\n      );\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        <Main athletes={this.state.athletes} getAthletes={this.getAthletes} />\n        <Footer />\n      </Fragment>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}