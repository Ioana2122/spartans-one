{"version":3,"sources":["components/Navbar/Header.jsx","components/Footer/Footer.jsx","components/Route/Athletes/Athlete/Athlete.jsx","components/Route/Athletes/AddAthleteModal/AddAthleteModal.jsx","components/Route/Athletes/MessageModal/MessageModal.jsx","components/Route/Athletes/AthletesContainer/AthletesContainer.jsx","components/Route/Athletes/Athletes.jsx","App.jsx","serviceWorker.js","index.js"],"names":["links","path","route","icon","activeStyle","fontWeight","color","Header","Navbar","bg","variant","expand","sticky","Brand","to","className","alt","src","width","height","Toggle","aria-controls","Collapse","id","Nav","map","link","i","key","exact","activeClassName","style","Component","footerStyle","position","left","bottom","background","fontSize","padding","Footer","athletesAPI","buttonText","Athlete","deleteAthlete","event","athleteID","target","console","log","fetch","method","then","res","json","answer","props","displayMessage","setTimeout","error","getAthletes","updateRecords","e","info","_id","elements","document","getElementById","getElementsByClassName","innerText","Object","keys","disabled","newScore","name","parseInt","value","URI","headers","Headers","append","body","JSON","stringify","personalBest","response","this","age","sex","email","photo","Card","Accordion","as","eventKey","Body","Img","Image","maxHeight","objectFit","imageOrientation","Title","Text","display","ListGroup","index","Item","Form","Row","Col","Label","textTransform","Control","type","defaultValue","ButtonGroup","size","aria-label","Button","onClick","AddAthleteModal","onChangeFileHandler","setState","selectedFile","files","loaded","handleSubmit","preventDefault","form","currentTarget","isValid","checkValidity","isValidated","stopPropagation","formPersonalBest","personalScore","length","formData","FormData","formName","formEmail","formAge","formGender","state","onHide","Modal","aria-labelledby","centered","closeButton","noValidate","onSubmit","Group","controlId","column","sm","required","placeholder","Feedback","Check","label","lg","onChange","span","offset","MessageModal","show","message","AthletesContainer","modalShow","messageShow","showModal","bind","hideModal","newState","athletes","athlete","paddingBottom","borderRadius","right","backgroundColor","border","Athletes","data","sort","a","b","App","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0f56ece.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nconst links = [\n  { path: \"Home\", route: \"/\", icon: \"fas fa-home\" },\n  { path: \"Athletes\", route: \"/athletes\", icon: \"fas fa-users\" },\n  { path: \"Wods\", route: \"/wods\", icon: \"fas fa-dumbbell\" },\n  { path: \"Search\", route: \"/find\", icon: \"fas fa-search\" }\n];\n\nconst activeStyle = {\n  fontWeight: \"bold\",\n  color: \"#f5ec47\"\n};\nexport default class Header extends Component {\n  render() {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n        <Navbar.Brand>\n          <NavLink to=\"/\" className=\"text-decoration-none text-light\">\n            <img\n              alt=\"\"\n              src=\"/logo.svg\"\n              width=\"30\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n            />{\" \"}\n            My|PT|Helper\n          </NavLink>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            {links.map((link, i) => (\n              <NavLink\n                key={i}\n                exact\n                to={`${link.route}`}\n                className=\"m-2 text-decoration-none\"\n                activeClassName=\"selected\"\n                activeStyle={activeStyle}\n                style={{ color: \"white\" }}\n              >\n                <i className={link.icon}></i>\n                <span> </span>\n                {link.path}\n              </NavLink>\n            ))}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nconst footerStyle = {\n    position : 'fixed',\n    left : 0,\n    bottom : 0,\n    width : '100%',\n    background : '#343a40',\n    color : '#fff',\n    height : '3.5rem',\n    fontSize : '1.25rem',\n    padding : '.75rem 3.175rem'\n}\n\nexport default class Footer extends Component {\n  render(){\n    return(\n      <footer style={footerStyle}>\n          | Footer\n      </footer>\n    )\n  }\n}","import React, { Component, Fragment } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Image from \"react-bootstrap/Image\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst athletesAPI = \"https://theboxathletes.herokuapp.com/athletes/\";\n// const athletesAPIDEV = \"http://localhost:3000/athletes/\";\n\nconst buttonText = [\"Edit Records\", \"Update Records\"];\n\nexport default class Athlete extends Component {\n  deleteAthlete = event => {\n    const athleteID = event.target.id;\n    console.log(athleteID);\n    fetch(athletesAPI + athleteID, {\n      method: \"DELETE\"\n    })\n      .then(res => res.json())\n      .then(\n        answer => {\n          console.log(\"Answer is: \" + answer);\n          // display a popup with the response from server\n          this.props.displayMessage(answer);\n          // hide it after 1.5 seconds\n          setTimeout(this.props.displayMessage, 1500);\n        },\n        error => console.log(error)\n      )\n      .then(this.props.getAthletes); // re-fetch from API\n  };\n\n  updateRecords = e => {\n    const athleteID = this.props.info._id;\n    // first, target the scores for current id, and select all scores\n    const elements = document\n      .getElementById(\"scores-\" + athleteID)\n      .getElementsByClassName(\"scores-best form-control\");\n    if (e.target.innerText === buttonText[0]) {\n      // remove 'disabled' attribute\n      Object.keys(elements).map(key => (elements[key].disabled = false));\n\n      // change button text:\n      e.target.innerText = buttonText[1];\n    } else {\n      // initialize a new object\n      const newScore = {};\n      // add new scores to the newScore object\n      Object.keys(elements).map(\n        key =>\n          (newScore[elements[key].name] = parseInt(elements[key].value) || 0)\n        // remove 0 from numbers starting with 0 (ex: 0123) and if nothing entered, puts 0\n      );\n\n      const URI = athletesAPI + athleteID;\n      console.log(URI);\n      const headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      // ABSOLUTELY necessary to specify Content-Type!\n\n      fetch(URI, {\n        method: \"PUT\",\n        headers: headers,\n        body: JSON.stringify({ personalBest: newScore })\n      })\n        .then(response => {\n          console.log(response);\n          return response.json();\n        })\n        .then(\n          answer => {\n            console.log(\"Answer is: \" + answer);\n          },\n          error => console.log(error)\n        )\n\n        .then(this.props.getAthletes)\n        .then(\n          this.props.displayMessage(\n            `Updated ${this.props.info.name}'s Personal Best!`\n          )\n        ) // display message\n        .then(setTimeout(this.props.displayMessage, 1500)); // hide it afte one second\n\n      // disable input fields\n      Object.keys(elements).map(key => (elements[key].disabled = true));\n      // change button text back to \"Edit Records\"\n      e.target.innerText = buttonText[0];\n    }\n  };\n\n  render() {\n    const { name, age, sex, email, photo, _id, personalBest } = this.props.info;\n\n    return (\n      <Fragment>\n        <Card key={_id} className=\"rounded-0\">\n          <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={_id}>\n            <span style={{ fontSize: \"1.5rem\" }}>\n              {sex === \"M\" ? (\n                <i className=\"fas fa-mars fa-lg\"></i>\n              ) : (\n                <i className=\"fas fa-venus fa-lg\"></i>\n              )}{\" \"}\n              {name}\n            </span>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey={_id}>\n            <Card.Body>\n              <Card.Img\n                as={Image}\n                src={photo}\n                style={{\n                  maxHeight: 300,\n                  objectFit: \"contain\",\n                  imageOrientation: \"from-image\"\n                }}\n              />\n\n              <Card.Title as={\"h3\"}>{name}</Card.Title>\n\n              <Card.Text>\n                <small className=\"text-muted\">{email}</small>\n                <span style={{ display: \"block\" }}>\n                  {\" \"}\n                  Age: {age} | Sex: {sex}\n                </span>\n              </Card.Text>\n              <ListGroup\n                variant=\"flush\"\n                style={{ padding: \"1rem 0\" }}\n                id={\"scores-\" + _id}\n              >\n                {Object.keys(personalBest).map((key, index) => (\n                  <ListGroup.Item as={Form} key={index}>\n                    <Row>\n                      <Col>\n                        <Form.Label>\n                          <span style={{ textTransform: \"capitalize\" }}>\n                            {key}\n                          </span>\n                        </Form.Label>\n                      </Col>\n                      <Col>\n                        <Form.Control\n                          disabled={true}\n                          type=\"number\"\n                          className=\"scores-best\"\n                          name={key}\n                          defaultValue={personalBest[key]}\n                        />\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n\n              <ButtonGroup size=\"sm\" aria-label=\"Action Buttons\">\n                <Button variant=\"success\" onClick={this.updateRecords}>\n                  {buttonText[0]}\n                </Button>\n                <Button variant=\"warning\">Edit Athlete</Button>\n                <Button variant=\"danger\" onClick={this.deleteAthlete} id={_id}>\n                  Detele Athlete\n                </Button>\n              </ButtonGroup>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst athletesAPI = \"https://theboxathletes.herokuapp.com/athletes/\";\n\nexport default class AddAthleteModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isValidated: false,\n      selectedFile: null\n    };\n  }\n\n  onChangeFileHandler = event => {\n    this.setState({\n      selectedFile: event.target.files[0],\n      loaded: 0\n    });\n    console.log(event.target.files[0]);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const isValid = form.checkValidity();\n    console.log(isValid);\n\n    this.setState({\n      isValidated: isValid\n    });\n\n    if (isValid === false) {\n      event.stopPropagation();\n    } else {\n      console.log(\"Form validated and submitted\");\n\n      const personalBest = form.formPersonalBest;\n      const personalScore = {};\n      for (let i = 0; i < personalBest.length; i++) {\n        personalScore[personalBest[i].name] =\n          parseInt(personalBest[i].value) || 0;\n      }\n\n      console.log(personalScore);\n\n      const formData = new FormData();\n      formData.append(\"name\", form.formName.value);\n      formData.append(\"email\", form.formEmail.value);\n      formData.append(\"age\", form.formAge.value);\n      formData.append(\"sex\", form.formGender.value);\n      formData.append(\"personalBest\", JSON.stringify(personalScore));\n      formData.append(\"photo\", this.state.selectedFile);\n\n      fetch(athletesAPI, {\n        method: \"POST\",\n        body: formData\n      })\n        .then(\n          response => {\n            console.log(response.json());\n          },\n          error => {\n            console.log(error);\n          }\n        )\n        .then(this.props.onHide); // this will close the modal\n    }\n  };\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add new Athlete\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* FORM STARTS HERE */}\n          <Form\n            noValidate\n            // validated={this.state.isValidated}\n            onSubmit={this.handleSubmit}\n          >\n            {/* NAME */}\n            <Form.Group as={Row} controlId=\"formName\">\n              <Form.Label column sm={2}>\n                Name\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Control\n                  required\n                  type=\"text\"\n                  placeholder=\"Athlete's name\"\n                />\n              </Col>\n            </Form.Group>\n            {/* EMAIL ADDRESS */}\n            <Form.Group as={Row} controlId=\"formEmail\">\n              <Form.Label column sm={2}>\n                Email\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Control required type=\"email\" placeholder=\"Enter email\" />\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a valid email.\n                </Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n            {/* AGE SELECTION */}\n            <Form.Group as={Row} controlId=\"formAge\">\n              <Form.Label column sm={2}>\n                Age\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Control required type=\"number\" placeholder=\"Enter age\" />\n              </Col>\n            </Form.Group>\n            {/* GENDER SELECTION */}\n            <fieldset>\n              <Form.Group as={Row} controlId=\"formGender\">\n                <Form.Label as=\"legend\" column sm={2}>\n                  Sex\n                </Form.Label>\n                <Col sm={10}>\n                  <Form.Check type=\"radio\" label=\"M\" value=\"M\" name=\"gender\" />\n                  <Form.Check type=\"radio\" label=\"F\" value=\"F\" name=\"gender\" />\n                </Col>\n              </Form.Group>\n            </fieldset>\n            {/* PERSONAL BEST SCORE */}\n            <Form.Group as={Row} controlId=\"formPersonalBest\">\n              <Form.Label column lg={12}>\n                Personal Best\n              </Form.Label>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Benchpress\"\n                  name=\"benchpress\"\n                />\n              </Col>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Strictpress\"\n                  name=\"strictpress\"\n                />\n              </Col>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Pushpress\"\n                  name=\"pushpress\"\n                />\n              </Col>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Row\"\n                  name=\"row\"\n                />\n              </Col>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Backsquat\"\n                  name=\"backsquat\"\n                />\n              </Col>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Frontsquat\"\n                  name=\"frontsquat\"\n                />\n              </Col>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Deadlift\"\n                  name=\"deadlift\"\n                />\n              </Col>\n              <Col sm={3}>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"number\"\n                  placeholder=\"Trapbardeadlift\"\n                  name=\"trapbardeadlift\"\n                />\n              </Col>\n            </Form.Group>\n            {/* PHOTO UPLOAD */}\n            <Form.Group as={Row} controlId=\"formPhoto\">\n              <Form.Label column sm={2}>\n                Photo\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Control type=\"file\" onChange={this.onChangeFileHandler} />\n              </Col>\n            </Form.Group>\n            {/* SUBMIT BUTTON */}\n            <Form.Group as={Row}>\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button variant=\"success\" type=\"submit\">\n                  Submit\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n          {/* FORM ENDED RIGHT ABOVE */}\n        </Modal.Body>\n        {/* OPTIONAL FOOTER - UNCOMMENT BELOW TO DISPLAY */}\n        {/* <Modal.Footer>\n                <Button variant=\"danger\" size=\"sm\" onClick={this.onHide}>Cancel</Button>\n            </Modal.Footer> */}\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport default class MessageModal extends Component {\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.onHide}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.message}</Modal.Title>\n        </Modal.Header>\n      </Modal>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport Athlete from \"../Athlete/Athlete\";\nimport AddAthleteModal from \"../AddAthleteModal/AddAthleteModal\";\nimport MessageModal from \"../MessageModal/MessageModal\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default class AthletesContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      modalShow: false,\n      messageShow: false,\n      message: \"\"\n    };\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.displayMessage = this.displayMessage.bind(this);\n  }\n\n  showModal() {\n    this.setState({\n      modalShow: true\n    });\n  }\n\n  hideModal() {\n    this.setState({\n      modalShow: false\n    });\n    this.props.getAthletes();\n    this.displayMessage(\"Modal AddAthlete inchis\"); // NEEDS IMPLEMENTATION OF CUSTOM MESSAGE\n    setTimeout(this.displayMessage, 1500);\n  }\n\n  displayMessage(message) {\n    const newState = !this.state.messageShow;\n    this.setState({\n      messageShow: newState,\n      message: message\n    });\n  }\n\n  render() {\n    const alwaysVisible = {\n      width: \"3rem\",\n      height: \"3rem\",\n      fontSize: \"1.25em\",\n      borderRadius: \"50%\",\n      position: \"fixed\",\n      bottom: 75,\n      right: 25,\n      backgroundColor: \"#f5ec47\",\n      color: \"black\",\n      border: \"1px dashed gray\"\n    };\n\n    return (\n      <Fragment>\n        {/* TEXT DISPLAYED WHILE FETCH IS RUNNING */}\n        {this.props.athletes.length === 0 && <h3>Loading athletes...</h3>}\n        {/* DISPLAYNG ATHLETES */}\n        <Accordion>\n          {this.props.athletes.map(athlete => (\n            <Athlete\n              info={athlete}\n              key={athlete._id}\n              getAthletes={this.props.getAthletes}\n              displayMessage={this.displayMessage}\n            />\n          ))}\n        </Accordion>\n        <div style={{ paddingBottom: \"3.5rem\" }}></div>\n        {/* BUTTON ALWAYS VISIBLE FOR ADDING NEW ATHLETE */}\n        <Button\n          style={alwaysVisible}\n          onClick={this.showModal}\n          className=\"hoverable\"\n        >\n          <i className=\"fas fa-user-plus\"></i>\n        </Button>\n        {/* MODAL ADD ATHLETE */}\n        <AddAthleteModal\n          show={this.state.modalShow}\n          onHide={this.hideModal}\n          message={this.state.message}\n        />\n        {/* MODAL TO DISPLAY MESSAGES */}\n        <MessageModal\n          show={this.state.messageShow}\n          onHide={this.displayMessage}\n          message={this.state.message}\n        />\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport AthletesContainer from \"./AthletesContainer/AthletesContainer\";\n\nconst athletesAPI = \"https://theboxathletes.herokuapp.com/athletes/\";\n\nexport default class Athletes extends Component {\n  constructor() {\n    super();\n    this.state = { athletes: [] };\n  }\n\n  componentDidMount() {\n    this.getAthletes();\n  }\n\n  getAthletes = () => {\n    fetch(athletesAPI)\n      .then(response => response.json())\n      .then(\n        data => {\n          data.sort((a, b) => (a.name > b.name ? 1 : -1));\n          this.setState({ athletes: data });\n          console.log(this.state.athletes);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        error => {\n          console.log(error);\n        }\n      );\n  };\n  render() {\n    return (\n      <div>\n        <AthletesContainer\n          athletes={this.state.athletes}\n          getAthletes={this.getAthletes}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Navbar/Header.jsx\";\nimport Footer from \"./components/Footer/Footer\";\nimport Athletes from \"./components/Route/Athletes/Athletes\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n        <Header />\n        <Switch>\n          {/* <Route path=\"/\" component={LandingPage} exact></Route> */}\n          <Route path=\"/athletes\" component={Athletes}></Route>\n          {/* <Route path=\"/wods\" component={Wods}></Route> */}\n          {/* <Route path=\"/find\" component={Search}></Route> */}\n        </Switch>\n        <Footer />\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}