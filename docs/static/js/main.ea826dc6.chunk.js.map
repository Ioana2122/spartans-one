{"version":3,"sources":["components/Header.jsx","components/Athlete.jsx","components/AddAthleteModal.jsx","components/Main.jsx","components/Footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","variant","expand","Brand","href","alt","src","width","height","className","Toggle","aria-controls","Collapse","id","Nav","Link","Component","athletesAPI","Athlete","deleteAthlete","event","athleteID","target","console","log","fetch","method","then","res","json","answer","error","this","props","info","name","age","sex","email","photo","_id","Card","key","border","Accordion","as","eventKey","Body","Img","Title","Text","style","display","ButtonGroup","size","aria-label","Button","onClick","AddAthleteModal","onChangeFileHandler","setState","selectedFile","files","loaded","handleSubmit","form","currentTarget","checkValidity","preventDefault","stopPropagation","isValidated","personalBest","formPersonalBest","personalScore","i","length","placeholder","value","formData","FormData","append","formName","formEmail","formAge","formGender","JSON","stringify","state","body","response","Modal","aria-labelledby","centered","closeButton","Form","noValidate","validated","onSubmit","Group","Row","controlId","Label","column","sm","Col","Control","required","type","Feedback","Check","label","lg","onChange","span","offset","Main","modalShow","showModal","bind","hideModal","athletes","map","athlete","paddingBottom","fontSize","borderRadius","position","bottom","right","show","onHide","footerStyle","left","background","color","padding","Footer","App","componentDidMount","data","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea826dc6.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\n\nexport default class Header extends Component {\n  render(){\n    return(\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Navbar.Brand href=\"#home\">\n                <img\n                    alt=\"\"\n                    src=\"/logo.svg\"\n                    width=\"30\"\n                    height=\"30\"\n                    className=\"d-inline-block align-top\"\n                />{' '}| Spartans\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\n                    <Nav.Link href=\"#link\">Link</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n  }\n}","import React, {Component, Fragment} from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\n\nconst athletesAPI = 'http://theboxathletes.herokuapp.com/athletes/'\n\n\nexport default class Athlete extends Component {\n\n    deleteAthlete =(event)=>{\n        const athleteID = event.target.id\n        console.log(athleteID)\n        fetch(athletesAPI+athleteID, {\n            method: 'DELETE'\n        }).then(res=>res.json()).then((answer)=>{console.log(answer)},(error)=>console.log(error))\n        \n        // re-render here !!!\n    }\n\n    render(){\n\n        const { name, age, sex, email, photo, _id } = this.props.info;\n\n        return(\n            <Fragment>\n                <Card key={_id} border=\"success\">\n                    <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={_id}>\n                        {name}\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey={_id}>\n                    <Card.Body>\n                        <Card.Img variant=\"top\" src={photo}/>\n\n                        <Card.Title>{name}</Card.Title>\n    \n                        <Card.Text>\n                            <small className=\"text-muted\">{email}</small>\n                            <span style={{display: 'block'}}> Age: {age} | Sex: {sex}</span>             \n                        </Card.Text>\n                        <ButtonGroup size=\"sm\" aria-label=\"Action Buttons\">\n                            <Button variant=\"success\">Personal Best</Button>\n                            <Button variant=\"warning\">Edit Athlete</Button>\n                            <Button variant=\"danger\" onClick={this.deleteAthlete} id={_id}>Detele Athlete</Button>\n                        </ButtonGroup>\n                        \n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Fragment>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n\nconst athletesAPI = 'http://theboxathletes.herokuapp.com/athletes/'\n\n\n\nexport default class AddAthleteModal extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            isValidated: false, \n            selectedFile: null\n        }\n    }\n\n    onChangeFileHandler=(event)=>{\n        this.setState({\n            selectedFile: event.target.files[0],\n            loaded:0\n        })\n        console.log(event.target.files[0])\n    }\n\n\n    handleSubmit =(event)=>{\n        const form = event.currentTarget\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            this.setState({\n                isValidated: true\n            })\n            console.log(\"Form validated and submitted\")\n\n            \n            const personalBest = form.formPersonalBest\n            const personalScore = {}\n            for(let i = 0 ; i < personalBest.length; i++){\n                personalScore[personalBest[i].placeholder] = personalBest[i].value\n            }\n\n            const formData = new FormData()\n            formData.append('name', form.formName.value)\n            formData.append('email', form.formEmail.value)\n            formData.append('age', form.formAge.value)\n            formData.append('sex', form.formGender.value)\n            formData.append('personalBest', JSON.stringify(personalScore))\n            formData.append('photo', this.state.selectedFile)\n\n            console.log(formData)\n\n            fetch(athletesAPI, {\n                method: 'POST',\n                body: formData\n            }).then((response)=>{console.log(response.json())},\n            (error)=>{console.log(error)})\n\n        }\n\n        // event.preventDefault()\n        console.log(\"Submitting attempt: isValidated is \" + this.state.isValidated)\n\n        \n    }\n\n\n    render(){\n        return (\n            <Modal\n            {...this.props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                Add new Athlete\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            {/* FORM STARTS HERE */}\n                <Form noValidate validated={this.state.isValidated} onSubmit={this.handleSubmit}>\n            {/* NAME */}\n                    <Form.Group as={Row} controlId=\"formName\">\n                        <Form.Label column sm={2}>Name</Form.Label>\n                        <Col sm={10}>\n                            <Form.Control required type=\"text\" placeholder=\"Athlete's name\" />\n                        </Col>\n                    </Form.Group>\n            {/* EMAIL ADDRESS */}\n                    <Form.Group as={Row} controlId=\"formEmail\">\n                        <Form.Label column sm={2}>Email</Form.Label>\n                        <Col sm={10}>\n                            <Form.Control required type=\"email\" placeholder=\"Enter email\" />\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your email with anyone else.\n                            </Form.Text>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Please provide a valid email.\n                            </Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n            {/* AGE SELECTION */}\n                    <Form.Group as={Row} controlId=\"formAge\">\n                        <Form.Label column sm={2}>Age</Form.Label>\n                        <Col sm={10}>               \n                            <Form.Control required type=\"number\" placeholder=\"Enter age\" />\n                        </Col>\n                    </Form.Group>\n            {/* GENDER SELECTION */}\n                    <fieldset>\n                        <Form.Group as={Row} controlId=\"formGender\">\n                            <Form.Label as=\"legend\" column sm={2}>\n                                Sex\n                            </Form.Label>\n                            <Col sm={10}>\n                                <Form.Check type=\"radio\" label=\"M\" value=\"M\" name=\"gender\"  />\n                                <Form.Check type=\"radio\" label=\"F\" value=\"F\" name=\"gender\" />\n                            </Col>\n                        </Form.Group>\n                    </fieldset>\n            {/* PERSONAL BEST SCORE */}\n                    <Form.Group as={Row} controlId=\"formPersonalBest\">\n                        <Form.Label column lg={12}>\n                                Personal Best\n                        </Form.Label>\n                        <Col sm={3}>\n                            <Form.Control size=\"sm\" type=\"number\" placeholder=\"Benchpress\" />\n                        </Col>\n                        <Col sm={3}>\n                            <Form.Control size=\"sm\" type=\"number\" placeholder=\"Strictpress\" />\n                        </Col>\n                        <Col sm={3}>\n                            <Form.Control size=\"sm\" type=\"number\" placeholder=\"Pushpress\" />\n                        </Col>\n                        <Col sm={3}>\n                            <Form.Control size=\"sm\" type=\"number\" placeholder=\"Row\" />\n                        </Col>\n                        <Col sm={3}>\n                            <Form.Control size=\"sm\" type=\"number\" placeholder=\"Backsquat\" />\n                        </Col>\n                        <Col sm={3}>\n                            <Form.Control size=\"sm\" type=\"number\" placeholder=\"Frontsquat\" />\n                        </Col>\n                        <Col sm={3}>\n                            <Form.Control size=\"sm\" type=\"number\" placeholder=\"Deadlift\" />\n                        </Col>\n                        <Col sm={3}>\n                            <Form.Control size=\"sm\" type=\"number\" placeholder=\"Trapbardeadlift\" />\n                        </Col>\n                    </Form.Group>\n            {/* PHOTO UPLOAD */}\n                    <Form.Group as={Row} controlId=\"formPhoto\">\n                        <Form.Label column sm={2}>Photo</Form.Label>\n                        <Col sm={10}>\n                            <Form.Control required type=\"file\" onChange={this.onChangeFileHandler}/>\n                        </Col>\n                    </Form.Group>\n            {/* SUBMIT BUTTON */}\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button variant=\"success\" type=\"submit\">\n                                Submit\n                            </Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            {/* FORM ENDED RIGHT ABOVE */}\n            </Modal.Body>\n            {/* OPTIONAL FOOTER - UNCOMMENT BELOW TO DISPLAY */}\n            {/* <Modal.Footer>\n                <Button variant=\"danger\" size=\"sm\" onClick={props.onHide}>Cancel</Button>\n            </Modal.Footer> */}\n            </Modal>\n        );\n        }\n}","import React, { Component, Fragment } from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Athlete from './Athlete.jsx'\nimport AddAthleteModal from './AddAthleteModal.jsx'\nimport Button from 'react-bootstrap/Button'\n\n\nexport default class Main extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      modalShow: false\n    }\n    this.showModal = this.showModal.bind(this)\n    this.hideModal = this.hideModal.bind(this)\n  }\n\n  showModal(){\n    this.setState({\n      modalShow: true\n    })\n  }\n\n  hideModal(){\n    this.setState({\n      modalShow: false\n    })\n  }\n\n  render(){\n    const alwaysVisible = {\n      width: \"3rem\",\n      height: \"3rem\",\n      fontSize: \"1.25em\",\n      borderRadius: \"50%\",\n      position: \"fixed\",\n      bottom: 100,\n      right: 50\n    }\n\n    return(\n    <Fragment>\n      {/* TEXT DISPLAYED WHILE FETCH IS RUNNING */}\n        {this.props.athletes.length === 0 && <p>Loading athletes...</p>}\n      {/* DISPLAYNG ATHLETES */}\n      <Accordion>\n        {this.props.athletes.map(athlete => <Athlete info={athlete} key={athlete._id}/>)}\n      </Accordion>\n      <div style={{paddingBottom: '3.5rem'}}></div>\n      {/* BUTTON ALWAYS VISIBLE FOR ADDING NEW ATHLETE */}\n      <Button style={alwaysVisible} onClick={this.showModal}>+</Button>\n      {/* MODAL ADD ATHLETE */}\n        <AddAthleteModal show={this.state.modalShow} onHide={this.hideModal} />\n    </Fragment>\n    )\n\n  }\n}\n\n\n\n","import React, { Component } from 'react'\n\nconst footerStyle = {\n    position : 'fixed',\n    left : 0,\n    bottom : 0,\n    width : '100%',\n    background : '#343a40',\n    color : '#fff',\n    height : '3.5rem',\n    fontSize : '1.25rem',\n    padding : '.75rem 3.175rem'\n}\n\nexport default class Footer extends Component {\n  render(){\n    return(\n      <footer style={footerStyle}>\n          | Footer\n      </footer>\n    )\n  }\n}","import React, { Component, Fragment } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header.jsx'\nimport Main from './components/Main.jsx'\nimport Footer from './components/Footer.jsx'\n\nconst athletesAPI = 'http://theboxathletes.herokuapp.com/athletes/'\n\n\nexport default class App extends Component {\n\n  constructor(){\n    super()\n    this.state = { athletes: [] }\n\n    this.componentDidMount = this.componentDidMount.bind(this)\n  }\n\n  componentDidMount(){\n    fetch(athletesAPI)\n      .then(response => response.json())\n      .then((data) => { this.setState({athletes: data }); console.log(this.state.athletes) },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n            (error) => { console.log(error) }\n            )\n  }\n\n  render(){\n    return(\n      <Fragment>\n        <Header />\n        <Main athletes={this.state.athletes}/>\n        <Footer />\n      </Fragment>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}