{"version":3,"sources":["components/Navbar/Header.jsx","components/Footer/Footer.jsx","components/Route/Athletes/Athlete/Athlete.jsx","components/Route/Athletes/MessageModal/MessageModal.jsx","components/Route/Athletes/AthleteCard/AthleteCard.jsx","components/Route/Athletes/AlertMessage/AlertMessage.jsx","helpers/addAthlete.js","components/Route/Athletes/AddAthleteModal/Spinner.jsx","components/Route/Athletes/AddAthleteModal/AddAthletev2.jsx","components/Route/Athletes/AthletesContainer/AthletesContainer.jsx","components/Route/Athletes/AthleteDetails/Select.jsx","components/Route/Athletes/AthleteDetails/Stopwatch.jsx","components/Route/Athletes/AthleteDetails/AddWorkoutForm.jsx","components/Route/Athletes/AthleteDetails/Workouts.jsx","components/Route/Athletes/AthleteDetails/EditInfoModal.jsx","components/Route/Athletes/AthleteDetails/AthleteDetails.jsx","components/Route/Athletes/Athletes.jsx","components/Route/Wods/WodsContainer/WodsContainer.jsx","components/Route/Wods/Wods.jsx","App.jsx","serviceWorker.js","index.js","components/Navbar/CoachVLogo.png"],"names":["links","path","route","icon","activeStyle","fontWeight","color","Header","useState","expanded","setExpanded","Navbar","bg","variant","expand","sticky","Brand","className","style","lineHeight","alt","src","Logo","width","height","Toggle","aria-controls","onMouseDown","onBlur","setTimeout","Collapse","id","Nav","map","link","i","onClick","key","exact","to","activeClassName","footerStyle","position","left","bottom","background","fontSize","padding","zIndex","display","justifyContent","alignItems","borderTop","athletesAPI","Footer","today","Date","state","athleteCount","female","male","date","getAthletes","fetch","then","response","json","data","forEach","entry","sex","setState","length","error","console","log","this","getDate","getMonth","getFullYear","prevProps","count","props","Component","Athlete","isSelected","info","name","age","email","photo","_id","phoneNumber","Card","backgroundColor","Accordion","as","eventKey","Body","Img","Image","maxHeight","objectFit","imageOrientation","Title","Text","substring","ButtonGroup","size","aria-label","toggleWillDeleteModal","MessageModal","Modal","show","onHide","closeButton","message","AthleteCard","athlete","AlertMessage","aria-labelledby","centered","messageAlertDeleted","addAthleteFields","type","label","required","invalidMessage","personalBestFields","Spinner","AddAthleteV2","phone","genre","personalBest","benchpress","strictpress","pushpress","row","backsquat","frontsquat","deadlift","trapDeadlift","selectedFileName","selectedFile","spinner","onChangeFileHandler","event","target","files","submitHandler","preventDefault","form","currentTarget","checkValidity","formData","FormData","append","JSON","stringify","method","body","answer","showServerResponse","finally","changeCount","Array","from","elements","find","element","validity","valid","focus","changeHandler","value","changePrHandler","parseInt","clearFieldsAndClose","Fragment","onSubmit","noValidate","field","index","md","onChange","labelClass","htmlFor","React","AthletesContainer","showSearchInput","isSearching","doTheSearch","result","athletes","filter","toLowerCase","includes","showModal","modalShow","hideModal","displayMessage","newState","messageShow","resize","window","innerWidth","isScreenSmall","_isMounted","willDelete","idToDelete","closeDeleteModal","displayAlertDeleted","messagedelete","alertDeleted","deleteAthlete","athleteID","res","searchfield","addEventListener","removeEventListener","Button","borderBottom","autoFocus","placeholder","onSelect","ev","paddingBottom","searchAthleteBtnStyles","addAthleteBtnStyles","borderRadius","right","border","Select","options","getValue","posibleOptions","option","e","Stopwatch","timerOn","timerStart","timerTime","startTimer","now","timer","setInterval","stopTimer","clearInterval","resetTimer","seconds","Math","floor","slice","minutes","hours","wodsApi","AddWorkoutForm","isAddingWorkout","setIsAddingWorkout","currentDay","setCurrentDay","availableWods","setAvailableWods","selectedWod","setSelectedWod","timerValue","setTimerValue","nrOfReps","setNrOfReps","useEffect","wods","Workouts","wod","formatedDate","split","reverse","join","data_panel","columns","sort","rows","theadTextWhite","tbodyTextWhite","bordered","dark","striped","paging","EditInfoModal","isOpen","isShowing","toggle","goBackBtnStyles","AthleteDetails","percentage","setPercentage","isEditing","setisEditing","editingPersonalBest","setEditingPersonalBest","GoBack","withRouter","history","goBack","handleKeyPress","document","getElementById","updateRecords","getElementsByClassName","editBtn","innerHTML","tagName","autofocus","Object","keys","disabled","newScore","URI","headers","Headers","eventkey","maxWidth","ListGroup","Item","Form","onKeyPress","paddingLeft","Row","Col","Label","textTransform","Control","defaultValue","minHeight","WebkitAppearance","orient","min","max","step","onTouchEnd","overflow","Athletes","a","b","component","WodsContainer","wodInfo","description","exercises","textWhite","exercise","weight","Wods","getWods","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d0d69946.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Logo from \"./CoachVLogo.png\";\n\nconst links = [\n  { path: \"Home\", route: \"/\", icon: \"fas fa-home\" },\n  { path: \"Athletes\", route: \"/athletes\", icon: \"fas fa-users\" },\n  { path: \"Wods\", route: \"/wods\", icon: \"fas fa-dumbbell\" },\n  { path: \"Search\", route: \"/find\", icon: \"fas fa-search\" }\n];\n\nconst activeStyle = {\n  fontWeight: \"bold\",\n  color: \"#f5ec47\"\n};\nexport default function Header() {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <Navbar\n      expanded={expanded}\n      bg=\"dark\"\n      variant=\"dark\"\n      expand=\"lg\"\n      sticky=\"top\"\n    >\n      <Navbar.Brand>\n        <div\n          className=\"text-light font-weight-bold\"\n          style={{ lineHeight: \"45px\" }}\n        >\n          <img\n            alt=\"\"\n            src={Logo}\n            width=\"45\"\n            height=\"45\"\n            className=\"d-inline-block align-top\"\n          />{\" \"}\n          My|PT|Helper\n        </div>\n      </Navbar.Brand>\n      <Navbar.Toggle\n        aria-controls=\"basic-navbar-nav\"\n        onMouseDown={() => setExpanded(expanded ? false : true)}\n        onBlur={() => setTimeout(() => setExpanded(false), 300)}\n      />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          {links.map((link, i) => (\n            <NavLink\n              onClick={() => setExpanded(false)}\n              key={i}\n              exact\n              to={`${link.route}`}\n              className=\"m-2 text-decoration-none text-center\"\n              activeClassName=\"selected\"\n              activeStyle={activeStyle}\n              style={{ color: \"white\" }}\n            >\n              <i className={link.icon}></i>\n              <span> </span>\n              {link.path}\n            </NavLink>\n          ))}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import React, { Component } from \"react\";\n\nconst footerStyle = {\n  position: \"fixed\",\n  left: 0,\n  bottom: 0,\n  width: \"100%\",\n  background: \"#343a40\",\n  color: \"#fff\",\n  fontSize: \"0.9rem\",\n  fontWeight: \"bold\",\n  padding: \".40rem 1.175rem\",\n  zIndex: \"100\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  borderTop: \"1px solid white\"\n};\n\nconst athletesAPI = \"https://theboxathletes.herokuapp.com/athletes/\";\n\nexport default class Footer extends Component {\n  today = new Date();\n  state = {\n    athleteCount: 0,\n    female: 0,\n    male: 0,\n    date: \"\"\n  };\n  componentDidMount() {\n    this.getAthletes();\n    const date =\n      this.today.getDate() +\n      \".\" +\n      (this.today.getMonth() + 1) +\n      \".\" +\n      this.today.getFullYear();\n    this.setState({ date: date });\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.count !== this.props.count) {\n      this.getAthletes();\n    }\n  }\n  getAthletes = () => {\n    fetch(athletesAPI)\n      .then(response => response.json())\n      .then(\n        data => {\n          let female = 0,\n            male = 0;\n          data.forEach(entry => (entry.sex === \"M\" ? male++ : female++));\n          this.setState({\n            athleteCount: data.length,\n            female: female,\n            male: male\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        error => {\n          console.log(error);\n        }\n      );\n  };\n  render() {\n    return (\n      <footer style={footerStyle}>\n        <div>\n          <div>Welcome, Coach Vali!</div>\n          <div className=\"text-muted text-center text-small\">\n            <i className=\"far fa-calendar-alt\"></i> {this.state.date}\n          </div>\n        </div>\n        <div className=\"text-center\">\n          <div>\n            <i className=\"fas fa-users fa-lg\"></i> {this.state.athleteCount}\n          </div>\n          <div>\n            {this.state.male} <i className=\"fas fa-mars fa-lg\"></i> |{\" \"}\n            {this.state.female} <i className=\"fas fa-venus fa-lg\"></i>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Image from \"react-bootstrap/Image\";\nimport { MDBBtn } from \"mdbreact\";\nimport \"./Athlete.css\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\n\n// const athletesAPI = \"https://theboxathletes.herokuapp.com/athletes/\";\n// const athletesAPIDEV = \"http://localhost:3000/athletes/\";\n\nexport default class Athlete extends Component {\n  render() {\n    const { isSelected } = this.props;\n    const { name, age, sex, email, photo, _id, phoneNumber } = this.props.info;\n    return (\n      <Fragment>\n        <Card\n          key={_id}\n          className=\"rounded-0 text-white\"\n          style={{ backgroundColor: \"#333333d6\" }}\n        >\n          <Accordion.Toggle\n            as={Card.Header}\n            variant=\"link\"\n            className=\"p-1 athleteheader\"\n            eventKey={_id}\n            style={{\n              backgroundColor: isSelected !== _id ? \"#1c1c1cbd\" : \"#fff\",\n              color: isSelected !== _id ? \"white\" : \"black\"\n            }}\n          >\n            <span style={{ fontSize: \"1.3rem\" }}>\n              <img className=\"m-2 imageIcon\" src={photo} alt=\"athlete\" /> {name}\n            </span>\n            {sex === \"M\" ? (\n              <div className=\"m-2\">\n                <i className=\"fas fa-mars fa-2x\"></i>\n              </div>\n            ) : (\n              <div className=\"m-2\">\n                <i className=\"fas fa-venus fa-2x\"></i>\n              </div>\n            )}{\" \"}\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey={_id}>\n            <Card.Body\n              className=\"text-center\"\n              style={{ backgroundColor: \"#333333\" }}\n            >\n              <Card.Img\n                className=\"p-0 border border-white\"\n                as={Image}\n                src={photo}\n                style={{\n                  maxHeight: 300,\n                  objectFit: \"contain\",\n                  imageOrientation: \"from-image\"\n                }}\n              />\n              <Card.Title as={\"h3\"} className=\"pt-2\">\n                {name}\n              </Card.Title>\n              <Card.Text className=\"text-white\">\n                <span className=\"p-1 d-block\">\n                  <i className=\"fas fa-phone-square fa-lg\"></i>{\" \"}\n                  {phoneNumber.substring(0, 4)}-{phoneNumber.substring(4, 7)}-\n                  {phoneNumber.substring(7, 10)}\n                </span>\n                <small className=\"text-muted\">\n                  <i className=\"fas fa-envelope fa-lg\"></i> {email}\n                </small>\n                <span style={{ display: \"block\" }}>\n                  {\" \"}\n                  Age: {age} | Sex: {sex}\n                </span>\n              </Card.Text>\n              <ButtonGroup size=\"sm\" aria-label=\"Action Buttons\">\n                <MDBBtn\n                  size=\"sm\"\n                  color=\"danger\"\n                  onClick={() => this.props.toggleWillDeleteModal(_id)}\n                  className=\"m-1 p-2\"\n                >\n                  <i className=\"fas fa-user-slash fa-2x mr-1\"></i> Delete\n                </MDBBtn>\n                <NavLink to={`/athletes/${_id}`}>\n                  <MDBBtn color=\"success\" className=\"m-1\" size=\"sm\">\n                    <i className=\"fas fa-dumbbell fa-2x mr-2\"></i> Details\n                  </MDBBtn>\n                </NavLink>\n              </ButtonGroup>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport default class MessageModal extends Component {\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.onHide}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.message}</Modal.Title>\n        </Modal.Header>\n      </Modal>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../AthleteCard/AthleteCard.css\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport { MDBBtn } from \"mdbreact\";\nimport { Link } from \"react-router-dom\";\n\nexport default function AthleteCard({ athlete, toggleWillDeleteModal }) {\n  return (\n    <div className=\"card text-center card-item\">\n      <div className=\"header-card-wraper\">\n        <img src={athlete.photo} alt=\"\" className=\"image-card\" />\n        <h2 className=\"card-name\">{athlete.name}</h2>\n        <h5 className=\"card-age\">\n          {athlete.age} |<span> </span>\n          {athlete.sex === \"M\" ? (\n            <i className=\"fas fa-mars fa-lg\"></i>\n          ) : (\n            <i className=\"fas fa-venus fa-lg\"></i>\n          )}\n        </h5>\n      </div>\n      <p className=\"card-phone\">\n        <i className=\"fas fa-phone-square fa-lg\"></i>{\" \"}\n        {athlete.phoneNumber.substring(0, 4)}-\n        {athlete.phoneNumber.substring(4, 7)}-\n        {athlete.phoneNumber.substring(7, 10)}\n      </p>\n      <p className=\"card-email text-muted\">\n        <i className=\"fas fa-envelope fa-lg\"></i> {athlete.email}\n      </p>\n      <ButtonGroup size=\"sm\">\n        <MDBBtn\n          color=\"danger\"\n          size=\"sm\"\n          className=\"athlete-card-button p-0\"\n          onClick={() => toggleWillDeleteModal(athlete._id)}\n        >\n          <i className=\"fas fa-user-slash fa-lg\"></i> Delete\n        </MDBBtn>\n        <Link to={`/athletes/${athlete._id}`}>\n          <MDBBtn\n            color=\"success\"\n            size=\"sm\"\n            className=\"athlete-card-button ml-0\"\n          >\n            <i className=\"fas fa-dumbbell fa-lg\"></i> Details\n          </MDBBtn>\n        </Link>\n      </ButtonGroup>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"./AlertMessage.css\";\n\nexport default class AlertMessage extends Component {\n  render() {\n    return (\n      <Modal\n        size=\"sm\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={this.props.show}\n      >\n        <Modal.Body>\n          <p className=\"delete-message\">{this.props.messageAlertDeleted}</p>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n","export const addAthleteFields = [\n  {\n    icon: \"user\",\n    name: \"name\",\n    type: \"text\",\n    label: \"Name\",\n    required: true,\n    invalidMessage: \"Name is required!\"\n  },\n  {\n    icon: \"phone\",\n    name: \"phone\",\n    type: \"text\",\n    label: \"Phone\",\n    required: true,\n    invalidMessage: \"Phone # is required!\"\n  },\n  {\n    icon: \"envelope-open\",\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    required: true,\n    invalidMessage: \"Email is required!\"\n  },\n  {\n    icon: \"baby\",\n    name: \"age\",\n    type: \"number\",\n    label: \"Age\",\n    required: true,\n    invalidMessage: \"Age is required!\"\n  }\n];\n\nexport const personalBestFields = [\n  { name: \"benchpress\", type: \"number\", label: \"Benchpress\", required: false },\n  {\n    name: \"strictpress\",\n    type: \"number\",\n    label: \"Strictpress\",\n    required: false\n  },\n  { name: \"pushpress\", type: \"number\", label: \"Pushpress\", required: false },\n  { name: \"row\", type: \"number\", label: \"Row\", required: false },\n  { name: \"backsquat\", type: \"number\", label: \"Backsquat\", required: false },\n  { name: \"frontsquat\", type: \"number\", label: \"Frontsquat\", required: false },\n  { name: \"deadlift\", type: \"number\", label: \"Deadlift\", required: false },\n  {\n    name: \"trapDeadlift\",\n    type: \"number\",\n    label: \"Trapbardeadlift\",\n    required: false\n  }\n];\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"loading style-2\">\n      <div className=\"overlayItems\">\n        <p className=\"overlayText\">Uploading...</p>\n      </div>\n      <div className=\"loading-wheel\"></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBIcon } from \"mdbreact\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"./AddAthlete.css\";\nimport {\n  addAthleteFields,\n  personalBestFields\n} from \"../../../../helpers/addAthlete\";\nimport Spinner from \"./Spinner\";\n\nconst athletesAPI = \"https://theboxathletes.herokuapp.com/athletes/\";\n\nclass AddAthleteV2 extends React.Component {\n  state = {\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    age: \"\",\n    genre: \"\",\n    personalBest: {\n      benchpress: \"\" || 0,\n      strictpress: \"\" || 0,\n      pushpress: \"\" || 0,\n      row: \"\" || 0,\n      backsquat: \"\" || 0,\n      frontsquat: \"\" || 0,\n      deadlift: \"\" || 0,\n      trapDeadlift: \"\" || 0\n    },\n    selectedFileName: \"Upload Photo...\",\n    selectedFile: null,\n    spinner: false\n  };\n  onChangeFileHandler = event => {\n    this.setState({\n      selectedFileName: this.state.phone + event.target.files[0].name,\n      selectedFile: event.target.files[0]\n    });\n  };\n  submitHandler = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    console.log(this.state.selectedFile);\n    const isValid = form.checkValidity();\n    if (isValid) {\n      const formData = new FormData();\n      formData.append(\"name\", this.state.name);\n      formData.append(\"phoneNumber\", this.state.phone);\n      formData.append(\"email\", this.state.email);\n      formData.append(\"age\", this.state.age);\n      formData.append(\"sex\", this.state.genre);\n      formData.append(\"personalBest\", JSON.stringify(this.state.personalBest));\n      this.state.selectedFile\n        ? formData.append(\n            \"photo\",\n            this.state.selectedFile,\n            this.state.selectedFileName\n          )\n        : formData.append(\"photo\", this.state.selectedFile);\n      this.setState({ spinner: true });\n      fetch(athletesAPI, {\n        method: \"POST\",\n        body: formData\n      })\n        .then(response => response.json())\n        .then(answer => console.log(\"ANSWER IS: \", answer))\n        .then(() => {\n          this.props.onHide();\n          this.props.showServerResponse(\n            `${this.state.name} has joined The Box and Valy's Athletes!`\n          );\n        })\n        .finally(() => {\n          this.setState({ spinner: false });\n          console.log(\"I'm in Finally!\");\n          setTimeout(() => {\n            this.props.changeCount();\n          }, 2500);\n        });\n    } else {\n      event.target.className += \" was-validated\";\n      const formElements = Array.from(form.elements);\n      const firstInvalidElement = formElements.find(\n        element => !element.validity.valid && element.required\n      );\n      firstInvalidElement.focus();\n    }\n  };\n  changeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  changePrHandler = event => {\n    this.setState({\n      personalBest: {\n        ...this.state.personalBest,\n        [event.target.name]: parseInt(event.target.value) || 0\n      }\n    });\n  };\n  clearFieldsAndClose = () => {\n    this.setState({\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      age: \"\",\n      genre: \"\",\n      personalBest: {\n        benchpress: \"\" || 0,\n        strictpress: \"\" || 0,\n        pushpress: \"\" || 0,\n        row: \"\" || 0,\n        backsquat: \"\" || 0,\n        frontsquat: \"\" || 0,\n        deadlift: \"\" || 0,\n        trapDeadlift: \"\" || 0\n      }\n    });\n    this.props.onHide();\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.spinner ? <Spinner /> : null}\n        <Modal\n          show={this.props.show}\n          onHide={this.props.onHide}\n          message={this.props.message}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header className=\"text-light modalHeader\">\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              <MDBIcon icon=\"user-plus\" size=\"lg\" className=\"mr-2\" /> Add\n              Athlete\n            </Modal.Title>\n            <button\n              type=\"button\"\n              className=\"close text-white\"\n              onClick={this.clearFieldsAndClose}\n            >\n              <span>&times;</span>\n            </button>\n          </Modal.Header>\n          <form\n            className=\"needs-validation addform\"\n            onSubmit={this.submitHandler}\n            noValidate\n          >\n            <Modal.Body className=\"text-light\" id=\"modalBody\">\n              <h3 className=\"mt-2 mb-2 p-2 text-center border\">\n                <MDBIcon icon=\"info\" size=\"lg\" className=\"mr-2\" /> Athlete Info\n              </h3>\n              <MDBRow className=\"m-3 border\">\n                {addAthleteFields.map((field, index) => (\n                  <MDBCol md=\"4\" key={index}>\n                    <MDBInput\n                      icon={field.icon}\n                      value={this.state[field.name]}\n                      onChange={this.changeHandler}\n                      id={field.name}\n                      type={field.type}\n                      name={field.name}\n                      label={field.label}\n                      labelClass=\"labelClass\"\n                      className=\"addAthleteInput\"\n                      required\n                    >\n                      <div className=\"invalid-feedback ml-4 pl-3\">\n                        {field.invalidMessage}\n                      </div>\n                      <div className=\"valid-feedback ml-4 pl-3\">\n                        Looks good!\n                      </div>\n                    </MDBInput>\n                  </MDBCol>\n                ))}\n                <MDBCol md=\"4\" className=\"mb-2 mt-3\">\n                  <label>\n                    <MDBIcon icon=\"camera\" size=\"lg\" /> - Photo\n                  </label>\n                  <div className=\"custom-file\">\n                    <input\n                      type=\"file\"\n                      onChange={this.onChangeFileHandler}\n                      className=\"custom-file-input\"\n                      id=\"FormPhoto\"\n                    />\n                    <label className=\"custom-file-label\" htmlFor=\"FormPhoto\">\n                      {this.state.selectedFileName}\n                    </label>\n                  </div>\n                </MDBCol>\n              </MDBRow>\n              <MDBRow>\n                <MDBCol md=\"12\">\n                  <div className=\"mt-3 mb-2\">\n                    <MDBIcon icon=\"male\" /> / <MDBIcon icon=\"female\" />\n                  </div>\n                  <div className=\"custom-control custom-radio\">\n                    <input\n                      type=\"radio\"\n                      className=\"custom-control-input\"\n                      onChange={this.changeHandler}\n                      id=\"male\"\n                      name=\"genre\"\n                      value=\"M\"\n                      required\n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"male\">\n                      Male\n                    </label>\n                  </div>\n                  <div className=\"custom-control custom-radio mb-3\">\n                    <input\n                      type=\"radio\"\n                      className=\"custom-control-input\"\n                      onChange={this.changeHandler}\n                      id=\"female\"\n                      name=\"genre\"\n                      value=\"F\"\n                      required\n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"female\">\n                      Female\n                    </label>\n                    <div className=\"invalid-feedback\">\n                      Please select male or female!\n                    </div>\n                  </div>\n                </MDBCol>\n              </MDBRow>\n              <h3 className=\"mt-2 mb-2 p-2 text-center border\">\n                <MDBIcon icon=\"dumbbell\" /> Personal Best\n              </h3>\n              <MDBRow className=\"m-3 pb-4 border\">\n                {personalBestFields.map((field, index) => (\n                  <MDBCol md=\"3\" key={index}>\n                    <MDBInput\n                      label={field.label}\n                      labelClass=\"labelClass\"\n                      className=\"addAthleteInput mx-auto\"\n                      id={field.name}\n                      onChange={this.changePrHandler}\n                      type={field.type}\n                      name={field.name}\n                      value={this.state[field.name]}\n                    />\n                  </MDBCol>\n                ))}\n              </MDBRow>\n              <MDBCol md=\"12\" className=\"mb-3 mt-3\">\n                <div className=\"custom-control custom-checkbox pl-3\">\n                  <input\n                    className=\"custom-control-input\"\n                    type=\"checkbox\"\n                    name=\"checkbox\"\n                    value=\"\"\n                    id=\"invalidCheck\"\n                    required\n                  />\n                  <label\n                    className=\"custom-control-label\"\n                    htmlFor=\"invalidCheck\"\n                  >\n                    Check the box if the info submitted is correct\n                  </label>\n                  <div className=\"invalid-feedback\">\n                    You must agree before submitting.\n                  </div>\n                </div>\n              </MDBCol>\n            </Modal.Body>\n            <Modal.Header className=\"modalFooter\">\n              <MDBBtn color=\"success\" type=\"submit\">\n                <MDBIcon icon=\"share-square\" size=\"lg\" className=\"mr-2\" />{\" \"}\n                Submit\n              </MDBBtn>\n              <MDBBtn color=\"danger\" onClick={this.clearFieldsAndClose}>\n                <MDBIcon icon=\"ban\" size=\"lg\" className=\"mr-2\" /> Cancel\n              </MDBBtn>\n            </Modal.Header>\n          </form>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddAthleteV2;\n","import React, { Component, Fragment } from \"react\";\nimport Athlete from \"../Athlete/Athlete\";\nimport MessageModal from \"../MessageModal/MessageModal\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport AthleteCard from \"../AthleteCard/AthleteCard\";\nimport \"../AthletesContainer/AthletesContainer.css\";\nimport AlertMessage from \"../AlertMessage/AlertMessage\";\nimport AddAthleteV2 from \"../AddAthleteModal/AddAthletev2\";\nimport { MDBBtn } from \"mdbreact\";\n\nconst athletesAPI = \"https://theboxathletes.herokuapp.com/athletes/\";\n\nexport default class AthletesContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      athletes: this.props.athletes,\n      searchfield: \"\",\n      modalShow: false,\n      messageShow: false,\n      message: \"\",\n      isScreenSmall: window.innerWidth <= 414,\n      isSelected: \"\",\n      isSearching: false,\n      willDelete: false,\n      alertDeleted: false,\n      messageAlertDeleted: \"\",\n      idToDelete: \"\"\n    };\n  }\n\n  showSearchInput = () => {\n    this.setState({ isSearching: !this.state.isSearching });\n  };\n\n  doTheSearch = event => {\n    const filteredAthletes = [...this.props.athletes];\n    const result = filteredAthletes.filter(athlete =>\n      athlete.name.toLowerCase().includes(event.target.value.toLowerCase())\n    );\n    this.setState({\n      athletes: event.target.value.length <= 1 ? this.props.athletes : result\n    });\n  };\n\n  showModal = () => {\n    this.setState({\n      modalShow: true\n    });\n  };\n\n  hideModal = () => {\n    this.setState({\n      modalShow: false\n    });\n  };\n\n  displayMessage = message => {\n    const newState = !this.state.messageShow;\n    this.setState({\n      messageShow: newState,\n      message: message\n    });\n  };\n\n  resize = () => {\n    if (window.innerWidth <= 697) {\n      this.setState({ isScreenSmall: true });\n    } else {\n      this.setState({ isScreenSmall: false });\n    }\n  };\n\n  //delete functionality\n\n  _isMounted = false;\n\n  toggleWillDeleteModal = id => {\n    this.setState({ willDelete: true, idToDelete: id });\n  };\n\n  closeDeleteModal = () => {\n    this.setState({ willDelete: false });\n  };\n\n  displayAlertDeleted = messagedelete => {\n    this.setState({\n      alertDeleted: true,\n      messageAlertDeleted: messagedelete\n    });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize);\n    this._isMounted = true;\n  }\n\n  deleteAthlete = () => {\n    const athleteID = this.state.idToDelete;\n    console.log(athleteID);\n    fetch(athletesAPI + athleteID, {\n      method: \"DELETE\"\n    })\n      .then(res => res.json())\n      .then(answer => {\n        console.log(\"Answer is: \" + answer);\n        this.closeDeleteModal();\n        this.displayAlertDeleted(answer);\n      })\n      .then(\n        setTimeout(() => {\n          this.props.changeCount();\n        }, 2000)\n      );\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    window.removeEventListener(\"resize\", this.resize);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {/* TEXT DISPLAYED WHILE FETCH IS RUNNING */}\n        {this.props.athletes.length === 0 && (\n          <h3 className=\"text-center mt-5 pt-5 text-light\">Loading...</h3>\n        )}\n        {/* DISPLAYNG ATHLETES */}\n        {/*MODAL THAT APPEARS AT CLICK DELETE BUTTON*/}\n        <Modal\n          show={this.state.willDelete}\n          onHide={this.closeDeleteModal}\n          centered\n        >\n          <Modal.Header closeButton></Modal.Header>\n          <Modal.Body className=\"delete-message\">\n            Are you sure you want to delete this athlete?\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={this.deleteAthlete}>\n              Yes\n            </Button>\n            <Button variant=\"success\" onClick={this.closeDeleteModal}>\n              No\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        {/*ALERT THAT DISPLAYS SERVER ANSWER AFTER DELETE */}\n        <AlertMessage\n          show={this.state.alertDeleted}\n          messageAlertDeleted={this.state.messageAlertDeleted}\n        />\n        <h2\n          className=\"text-center text-white p-1 m-1 w-50 mx-auto\"\n          style={{ borderBottom: \"0.5px solid white\" }}\n        >\n          My Athletes\n        </h2>\n        <div className=\"ml-5 mr-5 mb-2 text-center\">\n          {this.state.isSearching ? (\n            <input\n              type=\"search\"\n              autoFocus\n              placeholder=\"Type Athlete Name...\"\n              className=\"p-1 searchInput\"\n              onChange={this.doTheSearch}\n              onBlur={this.showSearchInput}\n            />\n          ) : null}\n        </div>\n        <Accordion\n          style={this.state.isScreenSmall ? {} : { display: \"none\" }}\n          onSelect={ev => this.setState({ isSelected: ev })}\n        >\n          {this.state.athletes.map(athlete => (\n            <Athlete\n              isSelected={this.state.isSelected}\n              key={athlete._id}\n              info={athlete}\n              toggleWillDeleteModal={this.toggleWillDeleteModal}\n              changeCount={this.props.changeCount}\n            />\n          ))}\n        </Accordion>\n        <div\n          className=\"cards-container\"\n          style={this.state.isScreenSmall ? { display: \"none\" } : {}}\n        >\n          {this.state.athletes.map((athlete, i) => (\n            <AthleteCard\n              key={i}\n              athlete={athlete}\n              toggleWillDeleteModal={this.toggleWillDeleteModal}\n              changeCount={this.props.changeCount}\n            />\n          ))}\n        </div>\n        <div style={{ paddingBottom: \"3.5rem\" }}></div>\n        <div\n          style={{\n            position: \"fixed\",\n            bottom: 63,\n            left: 7,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\"\n          }}\n        >\n          <MDBBtn\n            color=\"warning\"\n            style={searchAthleteBtnStyles}\n            onClick={this.showSearchInput}\n            className=\"hoverable\"\n          >\n            <i className=\"fas fa-search\"></i>\n          </MDBBtn>\n        </div>\n        {/* BUTTON ALWAYS VISIBLE FOR ADDING NEW ATHLETE */}\n        <MDBBtn\n          color=\"warning\"\n          style={addAthleteBtnStyles}\n          onClick={this.showModal}\n          className=\"hoverable\"\n        >\n          <i className=\"fas fa-user-plus\"></i>\n        </MDBBtn>\n        {/* MODAL ADD ATHLETE */}\n        <AddAthleteV2\n          show={this.state.modalShow}\n          onHide={this.hideModal}\n          showServerResponse={this.displayAlertDeleted}\n          changeCount={this.props.changeCount}\n        />\n        {/* MODAL TO DISPLAY MESSAGES */}\n        <MessageModal\n          show={this.state.messageShow}\n          onHide={this.displayMessage}\n          message={this.state.message}\n        />\n      </Fragment>\n    );\n  }\n}\n\nconst addAthleteBtnStyles = {\n  width: \"3rem\",\n  height: \"3rem\",\n  fontSize: \"1.25rem\",\n  padding: \"0.50rem 0.20rem\",\n  borderRadius: \"50%\",\n  position: \"fixed\",\n  bottom: 63,\n  right: 7,\n  color: \"black\",\n  border: \"2px double white\"\n};\nconst searchAthleteBtnStyles = {\n  width: \"3rem\",\n  height: \"3rem\",\n  fontSize: \"1.25em\",\n  padding: \"0.50rem 0.20rem\",\n  borderRadius: \"50%\",\n  backgroundColor: \"#dabc01\",\n  color: \"black\",\n  border: \"2px double white\"\n};\n","import React from \"react\";\n\nexport default function Select({ options, getValue }) {\n  const posibleOptions = options.map((option, i) => {\n    return (\n      <option key={i} value={option.name}>\n        {option.name}\n      </option>\n    );\n  });\n  return (\n    <div>\n      <select\n        className=\"browser-default custom-select\"\n        onChange={e => getValue(e.target.value)}\n      >\n        <option>Choose WOD (Please! Be gentle!)</option>\n        {posibleOptions}\n      </select>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { MDBBtn } from \"mdbreact\";\nimport \"./Stopwatch.css\";\n\nclass Stopwatch extends Component {\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0\n  };\n\n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: Date.now() - this.state.timerTime\n    });\n    this.timer = setInterval(() => {\n      this.setState({\n        timerTime: Date.now() - this.state.timerStart\n      });\n    }, 1000);\n  };\n\n  stopTimer = () => {\n    this.setState({ timerOn: false });\n    clearInterval(this.timer);\n  };\n\n  resetTimer = () => {\n    this.setState({\n      timerStart: 0,\n      timerTime: 0\n    });\n  };\n\n  render() {\n    const { timerTime } = this.state;\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    return (\n      <div className=\"Stopwatch mt-4 mb-4\">\n        <div className=\"Stopwatch-header\">\n          <i className=\"fas fa-stopwatch fa-lg mr-2 mt-2\"></i>Stopwatch\n        </div>\n        <div className=\"Stopwatch-display\">\n          {hours} : {minutes} : {seconds}\n        </div>\n        {this.state.timerOn === false && this.state.timerTime === 0 && (\n          <MDBBtn color=\"success\" size=\"sm\" onClick={this.startTimer}>\n            <i className=\"fas fa-play fa-lg mr-2\"></i> Start\n          </MDBBtn>\n        )}\n        {this.state.timerOn === true && (\n          <MDBBtn\n            color=\"danger\"\n            size=\"sm\"\n            onClick={() => {\n              this.stopTimer();\n              this.props.getValue(this.state.timerTime);\n            }}\n          >\n            <i className=\"fas fa-stop fa-lg mr-2\"></i> Stop\n          </MDBBtn>\n        )}\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\n          <MDBBtn color=\"warning\" size=\"sm\" onClick={this.startTimer}>\n            <i className=\"fas fa-pause fa-lg mr-2\"></i> Resume\n          </MDBBtn>\n        )}\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\n          <MDBBtn\n            color=\"secondary\"\n            size=\"sm\"\n            onClick={() => {\n              this.resetTimer();\n              this.props.getValue(0);\n            }}\n          >\n            <i className=\"fas fa-undo-alt fa-lg mr-2\"></i> Reset\n          </MDBBtn>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;\n","import React, { useEffect, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Button from \"react-bootstrap/Button\";\nimport Select from \"./Select\";\nimport { MDBBtn, MDBInput } from \"mdbreact\";\nimport Stopwatch from \"./Stopwatch\";\n\nconst wodsApi = \"https://theboxathletes.herokuapp.com/wods/\";\n\nexport default function AddWorkoutForm({ count }) {\n  const [isAddingWorkout, setIsAddingWorkout] = useState(false);\n  const [currentDay, setCurrentDay] = useState(\"\");\n  const [availableWods, setAvailableWods] = useState([]);\n  const [selectedWod, setSelectedWod] = useState(\"\");\n  const [timerValue, setTimerValue] = useState(0);\n  const [nrOfReps, setNrOfReps] = useState(0);\n\n  const saveWorkoutToAthlete = () => {\n    console.log(\"Day: \", currentDay);\n    console.log(\"Wod Name: \", selectedWod);\n    console.log(\"Time: \", timerValue);\n    console.log(\"NrOfReps: \", nrOfReps);\n  };\n  const validate = () => {};\n\n  useEffect(() => {\n    const today = new Date();\n    const date =\n      today.getDate() +\n      \".\" +\n      (today.getMonth() + 1) +\n      \".\" +\n      today.getFullYear();\n    setCurrentDay(date);\n    fetch(wodsApi)\n      .then(response => response.json())\n      .then(wods => setAvailableWods(wods));\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Card>\n        <div className=\"d-flex justify-content-around align-items-center mb-0 bg-dark p-3\">\n          <Accordion.Toggle\n            as={Button}\n            variant={!isAddingWorkout ? \"success\" : \"danger\"}\n            size=\"sm\"\n            eventKey={1}\n            onClick={() => setIsAddingWorkout(!isAddingWorkout)}\n          >\n            <div className=\"d-flex align-items-center\">\n              {!isAddingWorkout ? (\n                <i className=\"fas fa-plus fa-2x mr-2\"></i>\n              ) : (\n                <i className=\"fas fa-window-close fa-2x mr-2\"></i>\n              )}\n              Workout\n            </div>\n          </Accordion.Toggle>\n\n          <div className=\"ml-1 text-white\">Wod Count : {count}</div>\n        </div>\n        <Accordion.Collapse eventKey={1}>\n          <Card.Body className=\"bg-dark\">\n            <h3 className=\"bg-dark text-white font-size-lg mt-4 mb-4\">\n              <i className=\"far fa-calendar-check fa-lg mr-2\"></i>Date:{\" \"}\n              {currentDay}\n            </h3>\n            <Select options={availableWods} getValue={setSelectedWod} />\n            <Stopwatch getValue={setTimerValue} />\n            <MDBInput\n              onChange={e => setNrOfReps(parseInt(e.target.value))}\n              type=\"number\"\n              name=\"nrOfReps\"\n              label=\"Number of Reps (default : 0)\"\n              className=\"mx-auto\"\n            ></MDBInput>\n            <div onClick={validate}>\n              <MDBBtn color=\"info\" size=\"lg\" onClick={saveWorkoutToAthlete}>\n                <i className=\"fas fa-check-square fa-lg mr-2\"></i> Finish & Save\n                Workout\n              </MDBBtn>\n            </div>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { MDBCard, MDBCardBody, MDBCardHeader, MDBDataTable } from \"mdbreact\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport AddWorkoutForm from \"./AddWorkoutForm\";\n\nconst Workouts = ({ wods }) => {\n  wods.map(wod => {\n    let formatedDate = wod.date.split(\"T\");\n    return (wod.date = formatedDate[0]\n      .split(\"-\")\n      .reverse()\n      .join(\"-\"));\n  });\n  console.log(wods);\n  const data_panel = {\n    columns: [\n      {\n        label: \"Date\",\n        field: \"date\",\n        sort: \"asc\"\n      },\n      {\n        label: \"Name\",\n        field: \"name\",\n        sort: \"asc\"\n      },\n      {\n        label: \"Time\",\n        field: \"time\",\n        sort: \"asc\"\n      },\n      {\n        label: \"Reps\",\n        field: \"reps\",\n        sort: \"asc\"\n      }\n    ],\n    rows: [...wods]\n  };\n\n  return (\n    <MDBCard className=\"w-100\" style={{ backgroundColor: \"#353535\" }}>\n      <MDBCardHeader>\n        <Accordion>\n          <AddWorkoutForm count={wods.length} />\n        </Accordion>\n      </MDBCardHeader>\n      <MDBCardBody className=\"text-white\">\n        <MDBDataTable\n          theadTextWhite\n          tbodyTextWhite\n          bordered\n          dark\n          striped\n          data={data_panel}\n          paging={false}\n        ></MDBDataTable>\n      </MDBCardBody>\n    </MDBCard>\n  );\n};\n\nexport default Workouts;\n","import React, { Component } from \"react\";\nimport { MDBInput } from \"mdbreact\";\n\nimport {\n  MDBContainer,\n  MDBBtn,\n  MDBModal,\n  MDBModalBody,\n  MDBModalHeader,\n  MDBModalFooter\n} from \"mdbreact\";\n\nexport default class EditInfoModal extends Component {\n  render() {\n    return (\n      <MDBContainer>\n        <MDBModal\n          isOpen={this.props.isShowing}\n          toggle={() => this.props.show(!this.props.isShowing)}\n          centered\n        >\n          <MDBModalHeader\n            toggle={() => this.props.show(!this.props.isShowing)}\n            style={{\n              backgroundColor: \"#1f1f1f\",\n              border: \"2px ridge white\",\n              color: \"#fff\"\n            }}\n          >\n            Edit info\n          </MDBModalHeader>\n          <MDBModalBody className=\"bg-dark text-white border\">\n            <div className=\"form-group\">\n              <MDBInput label=\"Name\" icon=\"user\" />\n              <MDBInput label=\"Phone\" icon=\"phone\" />\n              <MDBInput label=\"Email\" icon=\"envelope-open\" />\n              <MDBInput label=\"Sex\" icon=\"transgender\" />\n              <MDBInput label=\"Age\" icon=\"baby\" />\n            </div>\n          </MDBModalBody>\n          <MDBModalFooter\n            style={{\n              backgroundColor: \"#1f1f1f\",\n              border: \"2px ridge white\",\n              color: \"#fff\"\n            }}\n          >\n            <MDBBtn\n              color=\"danger\"\n              onClick={() => this.props.show(!this.props.isShowing)}\n            >\n              Close\n            </MDBBtn>\n            <MDBBtn color=\"success\">Save changes</MDBBtn>\n          </MDBModalFooter>\n        </MDBModal>\n      </MDBContainer>\n    );\n  }\n}\n","import React, { Fragment, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\nimport \"./AthleteDetails.css\";\nimport Workouts from \"./Workouts\";\nimport EditInfoModal from \"./EditInfoModal\";\n\nconst athletesAPI = \"https://theboxathletes.herokuapp.com/athletes/\";\n\nconst goBackBtnStyles = {\n  position: \"fixed\",\n  bottom: \"5px\",\n  right: \"25%\",\n  border: \"0.5px solid white\",\n  color: \"white\",\n  zIndex: \"1000\"\n};\nexport default function AthleteDetails({ info, getAthletes }) {\n  const [percentage, setPercentage] = useState(50);\n  const [isEditing, setisEditing] = useState(false);\n  const [editingPersonalBest, setEditingPersonalBest] = useState(false);\n  const {\n    name,\n    age,\n    sex,\n    email,\n    photo,\n    _id,\n    personalBest,\n    phoneNumber,\n    wods\n  } = info;\n  const GoBack = withRouter(({ history }) => (\n    <MDBBtn\n      size=\"sm\"\n      color=\"dark\"\n      style={goBackBtnStyles}\n      onMouseDown={() => setTimeout(() => history.goBack(), 300)}\n    >\n      <i className=\"fas fa-backward\"></i> <span> Back</span>\n    </MDBBtn>\n  ));\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      document.getElementById(\"updatePr\").focus();\n      updateRecords(e);\n    }\n  };\n  const updateRecords = e => {\n    const athleteID = info._id;\n    // first, target the scores for current id, and select all scores\n    const elements = document\n      .getElementById(\"scores-\" + athleteID)\n      .getElementsByClassName(\"scores-best form-control\");\n    const editBtn = document.getElementById(\"updatePr\");\n    if (\n      e.target.id === \"triggerEdit\" ||\n      e.target.innerHTML.includes(\"Modify\") ||\n      e.target.className.includes(\"prfield\") ||\n      e.target.tagName === \"INPUT\"\n    ) {\n      // remove 'disabled' attribute\n      e.target.autofocus = true;\n      Object.keys(elements).map(key => (elements[key].disabled = false));\n      Array.from(elements).map(\n        element => (element.style.backgroundColor = \"#33b5e5\")\n      );\n      Array.from(elements).map(element => (element.style.color = \"#fff\"));\n      // change button text:\n      setEditingPersonalBest(true);\n      editBtn.innerHTML = `<div> <i class=\"fas fa-save fa-2x mr-2\"> </i> Update</div>`;\n    } else {\n      // initialize a new object\n      const newScore = {};\n      // add new scores to the newScore object\n      Object.keys(elements).map(\n        key =>\n          (newScore[elements[key].name] = parseInt(elements[key].value) || 0)\n        // remove 0 from numbers starting with 0 (ex: 0123) and if nothing entered, puts 0\n      );\n\n      const URI = athletesAPI + athleteID;\n      const headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      // ABSOLUTELY necessary to specify Content-Type!\n\n      fetch(URI, {\n        method: \"PUT\",\n        headers: headers,\n        body: JSON.stringify({ personalBest: newScore })\n      })\n        .then(response => {\n          return response.json();\n        })\n        .then(\n          answer => {\n            console.log(\"Answer is: \" + answer);\n          },\n          error => console.log(error)\n        )\n\n        .then(getAthletes)\n        .then(console.log(`Updated ${info.name}'s Personal Best!`)); // display message\n\n      // disable input fields\n      Object.keys(elements).map(key => (elements[key].disabled = true));\n      // change button text back to \"Edit Records\"\n      // editBtn.innerText = `...`;     Nu uita: TREBUIE REPARAT AICI!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n      setEditingPersonalBest(false);\n    }\n  };\n  return (\n    <Fragment>\n      <GoBack />\n      <EditInfoModal show={setisEditing} isShowing={isEditing} />\n      <Card\n        key={_id}\n        className=\"rounded-0 mb-5 text-light\"\n        style={{ backgroundColor: \"#353535\" }}\n      >\n        <div eventkey={_id}>\n          <Card.Body className=\"text-center\">\n            <div className=\"infoSection border\">\n              <img\n                alt={name}\n                as={Image}\n                src={photo}\n                className=\"thumbnail\"\n                style={{\n                  maxWidth: 200,\n                  objectFit: \"contain\",\n                  imageOrientation: \"from-image\"\n                }}\n              />\n              <div className=\"ml-2\">\n                <Card.Title as={\"h3\"} className=\"mt-3\">\n                  {name}\n                </Card.Title>\n                <Card.Text className=\"text-white\">\n                  <span className=\"p-1 d-block\">\n                    <i className=\"fas fa-phone-square fa-lg\"></i>{\" \"}\n                    {phoneNumber.substring(0, 4)}-{phoneNumber.substring(4, 7)}-\n                    {phoneNumber.substring(7, 10)}\n                  </span>\n                  <small className=\"text-muted\">{email}</small>\n                  <span style={{ display: \"block\" }}>\n                    {\" \"}\n                    Age: {age} | Sex: {sex}\n                  </span>\n                </Card.Text>\n                <MDBBtn\n                  color=\"warning\"\n                  size=\"sm\"\n                  onClick={() => setisEditing(!isEditing)}\n                >\n                  <i className=\"fas fa-user-edit fa-lg\"></i> Edit\n                </MDBBtn>\n              </div>\n            </div>\n            <h3 className=\"text-light mt-5 mb-3\">\n              <MDBIcon icon=\"dumbbell\" /> Personal Best\n            </h3>\n            <div className=\"detailsContainer mb-3 mt-0\">\n              <ListGroup\n                className=\"card bg-dark p-0 w-100\"\n                variant=\"flush\"\n                style={{ padding: \"0.5rem 0\", color: \"black\" }}\n                id={\"scores-\" + _id}\n              >\n                <div\n                  style={{\n                    display: \"inline-flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-around\"\n                  }}\n                >\n                  <div>\n                    <Button\n                      className=\"m-2\"\n                      onClick={updateRecords}\n                      id=\"updatePr\"\n                      variant={!editingPersonalBest ? \"info\" : \"success\"}\n                      size=\"sm\"\n                    >\n                      <i\n                        className=\"fas fa-user-cog fa-2x mr-2\"\n                        id=\"triggerEdit\"\n                      ></i>{\" \"}\n                      Modify\n                    </Button>\n                  </div>\n                  <div className=\"font-weight-bold mb-2 text-light\">\n                    Percentage: {percentage} %\n                  </div>\n                </div>\n\n                {Object.keys(personalBest).map((key, index) => (\n                  <ListGroup.Item\n                    as={Form}\n                    key={index}\n                    onClick={updateRecords}\n                    onKeyPress={handleKeyPress}\n                    style={{\n                      backgroundColor: \"#353539\",\n                      color: \"white\",\n                      paddingLeft: \"25px\"\n                    }}\n                  >\n                    <Row style={{ lineHeight: \"30px\" }}>\n                      <Col className=\"p-0 w-25 ml-0\">\n                        <Form.Label>\n                          <div style={{ textTransform: \"capitalize\" }}>\n                            {key}\n                          </div>\n                        </Form.Label>\n                      </Col>\n                      <Col className=\"p-0 w-25 ml-4 prfield\">\n                        <Form.Control\n                          disabled={true}\n                          type=\"number\"\n                          className=\"scores-best text-center\"\n                          name={key}\n                          defaultValue={personalBest[key]}\n                        />\n                      </Col>\n                      <div className=\"ml-4\">\n                        <i className=\"far fa-arrow-alt-circle-right fa\"></i>\n                      </div>\n                      <Col className=\"p-0 w-25\">\n                        <div>\n                          {(parseInt(personalBest[key]) * percentage) / 100}\n                          <small>kg</small>\n                        </div>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n              <div className=\"p-0 text-light mt-1 ml-3 card bg-info text-center\">\n                <div className=\"m-1 font-weight-bold\">98%</div>\n                <input\n                  style={{\n                    width: \"32px\",\n                    minHeight: \"440px\",\n                    WebkitAppearance: \"slider-vertical\"\n                  }}\n                  className=\"mx-auto\"\n                  type=\"range\"\n                  orient=\"vertical\"\n                  name=\"percentage\"\n                  id=\"percentageSlider\"\n                  min=\"10\"\n                  max=\"98\"\n                  step=\"1\"\n                  onClick={() => console.log(\"selected\")}\n                  onTouchEnd={() => (document.body.style.overflow = \"unset\")}\n                  onChange={() => {\n                    document.body.style.overflow = \"hidden\";\n                    setPercentage(\n                      document.getElementById(\"percentageSlider\").value\n                    );\n                  }}\n                />\n                <div className=\"m-1 font-weight-bold\">10%</div>\n              </div>\n            </div>\n            <div className=\"details-workouts mt-5\">\n              <h3 className=\"text-light\">\n                <MDBIcon icon=\"bolt\" /> {name}'s Workouts\n              </h3>\n              <div className=\"addwod mt-3\">\n                <Workouts wods={wods} />\n              </div>\n            </div>\n          </Card.Body>\n        </div>\n      </Card>\n    </Fragment>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport AthletesContainer from \"./AthletesContainer/AthletesContainer\";\nimport AthleteDetails from \"./AthleteDetails/AthleteDetails\";\n\nconst athletesAPI = \"https://theboxathletes.herokuapp.com/athletes/\";\n\nexport default class Athletes extends Component {\n  constructor() {\n    super();\n    this.state = { athletes: [] };\n  }\n  _isMounted = false;\n  componentDidMount() {\n    this._isMounted = true;\n    this.getAthletes();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  getAthletes = () => {\n    fetch(athletesAPI)\n      .then(response => response.json())\n      .then(\n        data => {\n          console.log(data);\n          data.sort((a, b) =>\n            a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1\n          );\n          this.setState({ athletes: data });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        error => {\n          console.log(error);\n        }\n      );\n  };\n  render() {\n    return (\n      <div>\n        <Route\n          path=\"/athletes\"\n          exact\n          component={() => {\n            return (\n              <AthletesContainer\n                athletes={this.state.athletes}\n                getAthletes={this.getAthletes}\n                changeCount={this.props.changeCount}\n              />\n            );\n          }}\n        />\n        {this.state.athletes.map((athlete, i) => {\n          return (\n            <Route\n              path={`/athletes/${athlete._id}`}\n              key={i}\n              exact\n              component={() => {\n                return (\n                  <AthleteDetails\n                    info={athlete}\n                    getAthletes={this.getAthletes}\n                  />\n                );\n              }}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\n\nexport default class WodsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wods: this.props.wods\n    };\n  }\n\n  render() {\n    const { description, _id, name, exercises } = this.props.wodInfo;\n    return (\n      <Fragment>\n        <Card\n          key={_id}\n          className=\"rounded-0 text-white\"\n          style={{ backgroundColor: \"#333333d6\" }}\n        >\n          <Accordion.Toggle\n            as={Card.Header}\n            variant=\"link\"\n            className=\"p-1 wodheader\"\n            eventKey={_id}\n          >\n            <span style={{ fontSize: \"1.3rem\" }}>{name}</span>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey={_id}>\n            <Card.Body\n              className=\"text-center\"\n              style={{ backgroundColor: \"#333333\" }}\n            >\n              <Card.Title as={\"h3\"} className=\"pt-2\">\n                {name} - {description}\n              </Card.Title>\n              <MDBTable>\n                <MDBTableHead color=\"primary-color\" textWhite>\n                  <tr>\n                    <th>Exercise name</th>\n                    <th>Number of reps</th>\n                    <th>Weight</th>\n                  </tr>\n                </MDBTableHead>\n                <MDBTableBody textWhite>\n                  {exercises.map((exercise, i) => {\n                    return (\n                      <tr key={i}>\n                        <td>{exercise.name}</td>\n                        <td>{exercise.nrOfReps}</td>\n                        <td>{exercise.weight}</td>\n                      </tr>\n                    );\n                  })}\n                </MDBTableBody>\n              </MDBTable>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport WodsContainer from \"./WodsContainer/WodsContainer\";\nimport Accordion from \"react-bootstrap/Accordion\";\n\nconst wodsApi = \"https://theboxathletes.herokuapp.com/wods/\";\n\nexport default class Wods extends Component {\n  constructor() {\n    super();\n    this.state = { wods: [] };\n  }\n\n  _isMounted = false;\n  componentDidMount() {\n    this._isMounted = true;\n    this.getWods();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  getWods = () => {\n    fetch(wodsApi)\n      .then(response => response.json())\n      .then(\n        data => {\n          console.log(data);\n          this.setState({ wods: data });\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  };\n\n  render() {\n    return (\n      <div>\n        <h2\n          className=\"text-center text-white p-1 m-1 w-50 mx-auto\"\n          style={{ borderBottom: \"0.5px solid white\" }}\n        >\n          My Wods\n        </h2>\n        <Accordion>\n          {this.state.wods.map(wod => (\n            <WodsContainer\n              wods={this.state.wods}\n              getWods={this.getWods}\n              key={wod._id}\n              wodInfo={wod}\n            />\n          ))}\n        </Accordion>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Navbar/Header.jsx\";\nimport Footer from \"./components/Footer/Footer\";\nimport Athletes from \"./components/Route/Athletes/Athletes\";\nimport Wods from \"./components/Route/Wods/Wods\";\n\nexport default class App extends Component {\n  state = { changeCount: 0 };\n  changeCount = () => {\n    this.setState({ changeCount: this.state.changeCount + 1 });\n  };\n  render() {\n    return (\n      <Router>\n        <Header />\n        <Switch>\n          {/* <Route path=\"/\" component={LandingPage} exact></Route> */}\n          <Route\n            path=\"/athletes\"\n            component={() => <Athletes changeCount={this.changeCount} />}\n          ></Route>\n          <Route path=\"/wods\" component={Wods}></Route>\n          {/* <Route path=\"/find\" component={Search}></Route> */}\n        </Switch>\n        <Footer count={this.state.changeCount} />\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/CoachVLogo.496aa6b2.png\";"],"sourceRoot":""}